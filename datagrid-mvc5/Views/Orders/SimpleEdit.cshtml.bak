@inherits System.Web.Mvc.WebViewPage
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title>редактирование </title>
    <script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
</head>
<body>
    <div id="app">
        <table >
            <tr>
                <td>Cтоимость перевозки</td>
                <td >
                    <input type="number" v-model="order.Freight" />
                </td>
            </tr>
            <tr>
                <td>Старана приписки корабля</td>
                <td>
                    <input type="text" v-model="order.ShipCountry"  />
                </td>
            </tr>
            <tr>
                <td>Город корабля</td>
                <td>
                    <input type="text" v-model="order.ShipCity" />
                </td>
            </tr>
            <tr>
                <td>Адрес корабля</td>
                <td>
                    <input type="text" v-model="order.ShipAddress" />
                </td>
            </tr>
        </table>

    </div>

    <script>

        new Vue({
            el: "#app",
            data: {
                id: @ViewBag.Id,
                order: {
                    OrderID: 0,
                    CustomerID: "",
                    EmployeeID: 0,
                    OrderDate: "",
                    RequiredDate: "",
                    ShippedDate: "",
                    ShipVia: 0,
                    Freight: 0,
                    ShipName: "0",
                    ShipAddress: "",
                    ShipCity: "",
                    ShipRegion: null,
                    ShipPostalCode: "",
                    ShipCountry: ""
            },
            oldOrder: {
                //OrderID: 0,
                //CustomerID: 0,
                //EmployeeID: 0,
                //OrderDate: { type: Date, default: "1996-07-10T00:00:00" },
                //RequiredDate: "1996-07-24T00:00:00",
                //ShippedDate: "1996-07-16T00:00:00",
                //ShipVia: 0,
                //Freight: 0,
                //ShipName: "",
                //ShipAddress: "",
                //ShipCity: "",
                //ShipRegion: "",
                //ShipPostalCode: "",
                ShipCountry: ""
            },
            AvaialbeCitys: [],
            AvaialbeRegions: [],
            AvaialbeCountrys: []
            },
            methods: {
                //читаем объект
                fetchOrder() {
                    var path = "../Orders/GetById?Id=" + this.id;
                    this.fetchJson(path, json => this.order = json);
                },
            fetchCityList() {
                //Avaiable city depended on  country
                    var country = this.order.ShipCountry;
                    if (country == null || country === "") {
                        country = '';
                    }
                var path = "../Orders/AvaiableCityList?country=" + country;
                this.fetchJson(path, json => {
                                  this.AvaialbeCitys = json;
                                 //if (!this.AvaialbeCitys.includes(this.order.ShipCity)) {
                                 //    this.order.ShipCity = "";
                                 //}
                             });
            },

            fetchCountrys() {

                    var path = "../Orders/AvaiableCountrys";
                    this.fetchJson(path,jsonResult => {
                            this.AvaialbeCountrys = jsonResult;

                        });

            },
                //обертка над стандартной функцией fetch
                fetchJson(path, collback) {
                    try {
                        fetch(path, { mode: 'cors' })
                            .then(response => response.json())
                            .then(function(json) { collback(json); }
                            );
                    } catch (ex) {
                        alert(ex);
                    }
  },
            setValue:function(){
              //  this.oldOrder.ShipCountry = this.order.ShipCountry;
                this.oldOrder.ShipCity =  this.order.ShipCity;
            }
            },
 watch: {
            order: {
                handler: function (after, before) {
                // console.log(this.oldOrder.ShipCity + '==>' + after.ShipCity);
                 console.log(this.oldOrder.ShipCountry + '==>' + after.ShipCountry);
                    if (this.oldOrder.ShipCountry !== after.ShipCountry) {

                        this.fetchCityList();
                    }
                   this.setValue();
                 },
                deep: true
            },
            errors: function (newV, old) {
               //  console.log(this.oldOrder.ShipCity + '==>' + );
                console.log("err=" + this.errors.ShipCity);
 console.log(this.errors );
            }

        },
            mounted: function() {
                this.fetchOrder();
            this.setValue();
            this.fetchCountrys();
            this.fetchAvaialbeCustomers();
            }
        });
    </script>
</body>
</html>
