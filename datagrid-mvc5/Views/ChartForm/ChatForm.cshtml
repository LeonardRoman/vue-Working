@inherits System.Web.Mvc.WebViewPage
<!DOCTYPE html>
<html>
<head>

    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
    <script src="~/Scripts/vue.js"></script>
    <script src="~/signalr/hubs"></script>
    <title>SignalR Simple Chat</title>
    <style type="text/css">
        .container {
            background-color: #99CCFF;
            border: thick solid #808080;
            padding: 20px;
            margin: 20px;
        }
      
   .layer {
             overflow: auto; /* Добавляем полосы прокрутки */
             
             height: 150px; /* Высота блока */
             padding: 5px; /* Поля вокруг текста */
             border: solid 1px black; /* Параметры рамки */
         } 
  
    </style>
</head>
<body>
    <div class="container" id="app" >
        <input type="text" v-model="message" />
        <input type="button" v-on:click="SendMessage()" value="Send" />
       
        <div class="layer">

            <li v-for="item in messages" :v-key="item">{{item.SenderName}} {{item.Message}} </li>
       </div>
      
</div>

        <script type="text/javascript">
            var chat = $.connection.chatHub;
    new Vue({
    el: "#app",
    data: {
        messages: [],
        message:''
    },
    computed :
    {
      
    },
    methods: {
        //читаем объект
        fetchMessages() {
            var fe = this.fetch;
            $.connection.hub.start().done(function () {
                chat.server.getMessages().done(function(val) { fe(val); });
            });
        },
        fetch(val) {
            console.log(val);
            this.messages = val;
        }

        ,
        SendMessage:function() {
            if(this.message.length>0)
            { chat.server.send(this.message); }
            message = '';
        },
        broadcastMessage:function(message) {
            this.messages.push(message);
        }
    },
  
    mounted: function () {
        this.fetchMessages();//начитываю сообщения
        chat.client.broadcastMessage = this.broadcastMessage;
    }
        });
    </script>
</body>
</html>